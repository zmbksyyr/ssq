name: Shuangseqiu Full Process - Data, Analysis, and Bonus Check

on:
  schedule:
    - cron: '0 22 * * 0,2,4'
  workflow_dispatch:

jobs:
  daily_process:
    runs-on: ubuntu-latest
    env:
      TZ: Asia/Shanghai

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python 3.9
      uses: actions/setup-python@v5
      with:
        python-version: 3.9

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        # [MODIFIED] requirements.txt 现在位于 py/ 文件夹
        key: ${{ runner.os }}-pip-${{ hashFiles('**/py/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # [MODIFIED] 指定 py/ 文件夹下的依赖文件
        pip install -r py/requirements.txt

    - name: Step 1 - Run data acquisition script
      # [MODIFIED] 使用 working-directory 指令，让命令在 py/ 文件夹内执行
      working-directory: ./py
      run: python ssq_data_processor.py

    - name: Step 2 - Run analysis script
      working-directory: ./py
      run: python ssq_analyzer.py

    - name: Step 3 - Run bonus calculation script
      working-directory: ./py
      run: python ssq_bonus_calculation.py
      
    - name: Step 4 - Clean reports and create fixed-name copies
      id: file_management
      run: |
        # 函数逻辑不变，但下面的调用路径已更新
        process_files() {
          local search_dir=$1
          local prefix=$2
          local fixed_name=$3
          local keep=3
          echo "--- Processing files in '${search_dir}' with prefix: '${prefix}_*.txt' ---"
          mapfile -t files < <(find "${search_dir}" -maxdepth 1 -name "${prefix}_*.txt" -print0 | xargs -0 ls -1 | sort)
          local count=${#files[@]}
          echo "Found $count files."
          if [ "$count" -eq 0 ]; then
            echo "No files found. Skipping."
            return
          fi
          latest_file="${files[$((count - 1))]}"
          if [ -f "$latest_file" ]; then
            # [MODIFIED] 将报告复制到根目录
            cp "$latest_file" "./$fixed_name"
            echo "Copied latest file '$latest_file' to './$fixed_name'"
          fi
          if [ "$count" -gt "$keep" ]; then
            num_to_delete=$((count - keep))
            echo "Keeping latest $keep files. Deleting $num_to_delete oldest files:"
            for i in $(seq 0 $((num_to_delete - 1))); do
              file_to_delete="${files[$i]}"
              if [ -f "$file_to_delete" ]; then
                echo "Removing: $file_to_delete"
                rm "$file_to_delete"
              fi
            done
          fi
        }

        # [MODIFIED] 调用函数，指定在 report/ 文件夹中查找
        process_files "report" "ssq_analysis_output" "latest_ssq_analysis.txt"
        process_files "report" "ssq_bonus_check" "latest_ssq_calculation.txt"

    - name: Configure Git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

    - name: Commit all changes
      run: |
        set -e
        echo "--- Staging and Committing All Changes ---"
        # [MODIFIED] 使用 'git add .' 仍然是最佳选择
        # 它会自动处理所有目录下的新增、修改和删除
        git add .
        echo "Current git status:"
        git status --porcelain
        if git diff --staged --quiet; then
          echo "No changes to commit."
        else
          git commit -m "Auto update: Data, analysis, and bonus check for $(date +'%Y-%m-%d')"
        fi

    - name: Pull remote changes to sync before push
      run: |
        git config pull.rebase false
        git pull origin ${{ github.ref_name }} --no-edit

    - name: Push changes
      uses: ad-m/github-push-action@v0.8.0
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ github.ref_name }}
